package net.tslat.aoa3.client.model.entities.boss.mechbot;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

public class ModelMechbot extends ModelBase {
	private ModelRenderer head;
	private ModelRenderer body2;
	private ModelRenderer rightArm;
	private ModelRenderer leftArm;
	private ModelRenderer body3;
	private ModelRenderer body4;
	private ModelRenderer body5;
	private ModelRenderer body6;
	private ModelRenderer leftArm2;
	private ModelRenderer rightArm2;
	private ModelRenderer rightLeg3;
	private ModelRenderer leftLeg3;
	private ModelRenderer leftLeg2;
	private ModelRenderer rightLeg2;
	private ModelRenderer body7;
	private ModelRenderer body;
	private ModelRenderer head2;
	private ModelRenderer head3;
	private ModelRenderer head4;
	private ModelRenderer head5;
	private ModelRenderer head6;
	private ModelRenderer head7;
	private ModelRenderer leftLeg;
	private ModelRenderer rightLeg;
	private ModelRenderer head8;
	private ModelRenderer head9;
	private ModelRenderer head10;
	private ModelRenderer head11;

	public ModelMechbot() {
		textureWidth = 64;
		textureHeight = 64;
		head = new ModelRenderer(this, 29, 44);
		head.addBox(4.0f, -8.0f, -3.0f, 2, 2, 3);
		head.setRotationPoint(0.0f, -6.0f, 0.0f);
		head.setTextureSize(64, 64);
		head.mirror = true;
		setRotation(head, 0.0f, 0.0f, 0.0f);
		body2 = new ModelRenderer(this, 0, 33);
		body2.addBox(-6.0f, 14.0f, -4.0f, 12, 2, 8);
		body2.setRotationPoint(0.0f, -4.0f, 0.0f);
		body2.setTextureSize(64, 64);
		body2.mirror = true;
		setRotation(body2, 0.0f, 0.0f, 0.0f);
		rightArm = new ModelRenderer(this, 33, 6);
		rightArm.addBox(-4.0f, -5.0f, -4.0f, 7, 3, 8);
		rightArm.setRotationPoint(-9.0f, -1.0f, 0.0f);
		rightArm.setTextureSize(64, 64);
		rightArm.mirror = true;
		setRotation(rightArm, 0.0f, 0.0f, 0.0f);
		leftArm = new ModelRenderer(this, 33, 6);
		leftArm.addBox(-3.0f, -5.0f, -4.0f, 7, 3, 8);
		leftArm.setRotationPoint(9.0f, -1.0f, 0.0f);
		leftArm.setTextureSize(64, 64);
		leftArm.mirror = true;
		setRotation(leftArm, 0.0f, 0.0f, 0.0f);
		body3 = new ModelRenderer(this, 0, 43);
		body3.addBox(-5.0f, 0.0f, -3.0f, 10, 14, 6);
		body3.setRotationPoint(0.0f, -4.0f, 0.0f);
		body3.setTextureSize(64, 64);
		body3.mirror = true;
		setRotation(body3, 0.0f, 0.0f, 0.0f);
		body4 = new ModelRenderer(this, 32, 49);
		body4.addBox(5.0f, 7.0f, -4.0f, 1, 7, 8);
		body4.setRotationPoint(0.0f, -4.0f, 0.0f);
		body4.setTextureSize(64, 64);
		body4.mirror = true;
		setRotation(body4, 0.0f, 0.0f, 0.0f);
		body5 = new ModelRenderer(this, 0, 33);
		body5.addBox(-6.0f, -2.0f, -4.0f, 12, 2, 8);
		body5.setRotationPoint(0.0f, -4.0f, 0.0f);
		body5.setTextureSize(64, 64);
		body5.mirror = true;
		setRotation(body5, 0.0f, 0.0f, 0.0f);
		body6 = new ModelRenderer(this, 32, 49);
		body6.addBox(-6.0f, 7.0f, -4.0f, 1, 7, 8);
		body6.setRotationPoint(0.0f, -4.0f, 0.0f);
		body6.setTextureSize(64, 64);
		body6.mirror = true;
		setRotation(body6, 0.0f, 0.0f, 0.0f);
		leftArm2 = new ModelRenderer(this, 40, 24);
		leftArm2.addBox(-2.0f, -2.0f, -3.0f, 6, 15, 6);
		leftArm2.setRotationPoint(9.0f, -1.0f, 0.0f);
		leftArm2.setTextureSize(64, 64);
		leftArm2.mirror = true;
		setRotation(leftArm2, 0.0f, 0.0f, 0.0f);
		rightArm2 = new ModelRenderer(this, 40, 24);
		rightArm2.addBox(-4.0f, -2.0f, -3.0f, 6, 15, 6);
		rightArm2.setRotationPoint(-9.0f, -1.0f, 0.0f);
		rightArm2.setTextureSize(64, 64);
		rightArm2.mirror = true;
		setRotation(rightArm2, 0.0f, 0.0f, 0.0f);
		rightLeg3 = new ModelRenderer(this, 24, 25);
		rightLeg3.addBox(-1.0f, 10.0f, -1.0f, 2, 1, 2);
		rightLeg3.setRotationPoint(-4.0f, 12.0f, 0.0f);
		rightLeg3.setTextureSize(64, 64);
		rightLeg3.mirror = true;
		setRotation(rightLeg3, 0.0f, 0.0f, 0.0f);
		leftLeg3 = new ModelRenderer(this, 24, 25);
		leftLeg3.addBox(-1.0f, 10.0f, -1.0f, 2, 1, 2);
		leftLeg3.setRotationPoint(4.0f, 12.0f, 0.0f);
		leftLeg3.setTextureSize(64, 64);
		leftLeg3.mirror = true;
		setRotation(leftLeg3, 0.0f, 0.0f, 0.0f);
		leftLeg2 = new ModelRenderer(this, 0, 16);
		leftLeg2.addBox(-3.0f, 0.0f, -3.0f, 6, 10, 6);
		leftLeg2.setRotationPoint(4.0f, 12.0f, 0.0f);
		leftLeg2.setTextureSize(64, 64);
		leftLeg2.mirror = true;
		setRotation(leftLeg2, 0.0f, 0.0f, 0.0f);
		rightLeg2 = new ModelRenderer(this, 0, 16);
		rightLeg2.addBox(-3.0f, 0.0f, -3.0f, 6, 10, 6);
		rightLeg2.setRotationPoint(-4.0f, 12.0f, 0.0f);
		rightLeg2.setTextureSize(64, 64);
		rightLeg2.mirror = true;
		setRotation(rightLeg2, 0.0f, 0.0f, 0.0f);
		body7 = new ModelRenderer(this, 32, 49);
		body7.addBox(5.0f, 0.0f, -4.0f, 1, 7, 8);
		body7.setRotationPoint(0.0f, -4.0f, 0.0f);
		body7.setTextureSize(64, 64);
		body7.mirror = true;
		setRotation(body7, 0.0f, 0.0f, 0.0f);
		body = new ModelRenderer(this, 32, 49);
		body.addBox(-6.0f, 0.0f, -4.0f, 1, 7, 8);
		body.setRotationPoint(0.0f, -4.0f, 0.0f);
		body.setTextureSize(64, 64);
		body.mirror = true;
		setRotation(body, 0.0f, 0.0f, 0.0f);
		head2 = new ModelRenderer(this, 49, 0);
		head2.addBox(-1.0f, -7.0f, -5.0f, 2, 4, 1);
		head2.setRotationPoint(0.0f, -6.0f, 0.0f);
		head2.setTextureSize(64, 64);
		head2.mirror = true;
		setRotation(head2, 0.0f, 0.0f, 0.0f);
		head3 = new ModelRenderer(this, 29, 44);
		head3.addBox(-6.0f, -8.0f, -3.0f, 2, 2, 3);
		head3.setRotationPoint(0.0f, -6.0f, 0.0f);
		head3.setTextureSize(64, 64);
		head3.mirror = true;
		setRotation(head3, 0.0f, 0.0f, 0.0f);
		head4 = new ModelRenderer(this, 46, 45);
		head4.addBox(6.0f, -8.0f, -4.0f, 1, 3, 8);
		head4.setRotationPoint(0.0f, -6.0f, 0.0f);
		head4.setTextureSize(64, 64);
		head4.mirror = true;
		setRotation(head4, 0.0f, 0.0f, 0.0f);
		head5 = new ModelRenderer(this, 46, 45);
		head5.addBox(-7.0f, -8.0f, -4.0f, 1, 3, 8);
		head5.setRotationPoint(0.0f, -6.0f, 0.0f);
		head5.setTextureSize(64, 64);
		head5.mirror = true;
		setRotation(head5, 0.0f, 0.0f, 0.0f);
		head6 = new ModelRenderer(this, 8, 33);
		head6.addBox(1.0f, -9.0f, -4.0f, 2, 1, 8);
		head6.setRotationPoint(0.0f, -6.0f, 0.0f);
		head6.setTextureSize(64, 64);
		head6.mirror = true;
		setRotation(head6, 0.0f, 0.0f, 0.0f);
		head7 = new ModelRenderer(this, 9, 33);
		head7.addBox(4.0f, -3.0f, -5.0f, 1, 2, 8);
		head7.setRotationPoint(0.0f, -6.0f, 0.0f);
		head7.setTextureSize(64, 64);
		head7.mirror = true;
		setRotation(head7, 0.0f, 0.0f, 0.0f);
		leftLeg = new ModelRenderer(this, 24, 17);
		leftLeg.addBox(-3.0f, 11.0f, -3.0f, 6, 1, 6);
		leftLeg.setRotationPoint(4.0f, 12.0f, 0.0f);
		leftLeg.setTextureSize(64, 64);
		leftLeg.mirror = true;
		setRotation(leftLeg, 0.0f, 0.0f, 0.0f);
		rightLeg = new ModelRenderer(this, 24, 17);
		rightLeg.addBox(-3.0f, 11.0f, -3.0f, 6, 1, 6);
		rightLeg.setRotationPoint(-4.0f, 12.0f, 0.0f);
		rightLeg.setTextureSize(64, 64);
		rightLeg.mirror = true;
		setRotation(rightLeg, 0.0f, 0.0f, 0.0f);
		head8 = new ModelRenderer(this, 0, 0);
		head8.addBox(-4.0f, -8.0f, -4.0f, 8, 8, 8);
		head8.setRotationPoint(0.0f, -6.0f, 0.0f);
		head8.setTextureSize(64, 64);
		head8.mirror = true;
		setRotation(head8, 0.0f, 0.0f, 0.0f);
		head9 = new ModelRenderer(this, 8, 33);
		head9.addBox(-3.0f, -9.0f, -4.0f, 2, 1, 8);
		head9.setRotationPoint(0.0f, -6.0f, 0.0f);
		head9.setTextureSize(64, 64);
		head9.mirror = true;
		setRotation(head9, 0.0f, 0.0f, 0.0f);
		head10 = new ModelRenderer(this, 26, 0);
		head10.addBox(-4.0f, -3.0f, -5.0f, 8, 3, 1);
		head10.setRotationPoint(0.0f, -6.0f, 0.0f);
		head10.setTextureSize(64, 64);
		head10.mirror = true;
		setRotation(head10, 0.0f, 0.0f, 0.0f);
		head11 = new ModelRenderer(this, 9, 33);
		head11.addBox(-5.0f, -3.0f, -5.0f, 1, 2, 8);
		head11.setRotationPoint(0.0f, -6.0f, 0.0f);
		head11.setTextureSize(64, 64);
		head11.mirror = true;
		setRotation(head11, 0.0f, 0.0f, 0.0f);
	}

	public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7) {
		setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
		head.render(par7);
		body2.render(par7);
		rightArm.render(par7);
		leftArm.render(par7);
		body3.render(par7);
		body4.render(par7);
		body5.render(par7);
		body6.render(par7);
		leftArm2.render(par7);
		rightArm2.render(par7);
		rightLeg3.render(par7);
		leftLeg3.render(par7);
		leftLeg2.render(par7);
		rightLeg2.render(par7);
		body7.render(par7);
		body.render(par7);
		head2.render(par7);
		head3.render(par7);
		head4.render(par7);
		head5.render(par7);
		head6.render(par7);
		head7.render(par7);
		leftLeg.render(par7);
		rightLeg.render(par7);
		head8.render(par7);
		head9.render(par7);
		head10.render(par7);
		head11.render(par7);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity) {
		head.rotateAngleY = par4 / 57.295776f;
		head.rotateAngleX = par5 / 54.11268f;
		head2.rotateAngleY = par4 / 57.295776f;
		head2.rotateAngleX = par5 / 54.11268f;
		head3.rotateAngleY = par4 / 57.295776f;
		head3.rotateAngleX = par5 / 54.11268f;
		head4.rotateAngleY = par4 / 57.295776f;
		head4.rotateAngleX = par5 / 54.11268f;
		head5.rotateAngleY = par4 / 57.295776f;
		head5.rotateAngleX = par5 / 54.11268f;
		head6.rotateAngleY = par4 / 57.295776f;
		head6.rotateAngleX = par5 / 54.11268f;
		head7.rotateAngleY = par4 / 57.295776f;
		head7.rotateAngleX = par5 / 54.11268f;
		head8.rotateAngleY = par4 / 57.295776f;
		head8.rotateAngleX = par5 / 54.11268f;
		head9.rotateAngleY = par4 / 57.295776f;
		head9.rotateAngleX = par5 / 54.11268f;
		head10.rotateAngleY = par4 / 57.295776f;
		head10.rotateAngleX = par5 / 54.11268f;
		head11.rotateAngleY = par4 / 57.295776f;
		head11.rotateAngleX = par5 / 54.11268f;
		rightArm.rotateAngleX = MathHelper.cos((par1 * 0.6662f + 3.1415927f)) * 2.0f * par2 * 0.5f;
		rightArm.rotateAngleZ = 0.0f;
		rightArm2.rotateAngleX = MathHelper.cos((par1 * 0.6662f + 3.1415927f)) * 2.0f * par2 * 0.5f;
		rightArm2.rotateAngleZ = 0.0f;
		leftArm.rotateAngleX = MathHelper.cos((par1 * 0.6662f)) * 2.0f * par2 * 0.5f;
		leftArm.rotateAngleZ = 0.0f;
		leftArm2.rotateAngleX = MathHelper.cos((par1 * 0.6662f)) * 2.0f * par2 * 0.5f;
		leftArm2.rotateAngleZ = 0.0f;
		rightLeg.rotateAngleX = MathHelper.cos((par1 * 0.6662f)) * 1.4f * par2;
		rightLeg.rotateAngleY = 0.0f;
		rightLeg2.rotateAngleX = MathHelper.cos((par1 * 0.6662f)) * 1.4f * par2;
		rightLeg2.rotateAngleY = 0.0f;
		rightLeg3.rotateAngleX = MathHelper.cos((par1 * 0.6662f)) * 1.4f * par2;
		rightLeg3.rotateAngleY = 0.0f;
		leftLeg.rotateAngleX = MathHelper.cos((par1 * 0.6662f + 3.1415927f)) * 1.4f * par2;
		leftLeg2.rotateAngleX = MathHelper.cos((par1 * 0.6662f + 3.1415927f)) * 1.4f * par2;
		leftLeg3.rotateAngleX = MathHelper.cos((par1 * 0.6662f + 3.1415927f)) * 1.4f * par2;
	}
}

